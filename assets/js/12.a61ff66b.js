(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{368:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jenkins-getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-getting-started"}},[t._v("#")]),t._v(" Jenkins: Getting Started")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("What was the problem?")]),t._v(" "),e("p",[t._v("I wanted to set up my own CI Server as CI servers have minutes limit. Bitbucket has 50 min/month, Azure DevOps has 240 min/month, AWS Pipeline is paid.")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("What was the solution?")]),t._v(" "),e("p",[t._v("I chose Jenkins as I can install it on my own server, had some initial problems like setting up the password, re-installations, containerizing. So, I summed it up here.")])]),t._v(" "),e("p",[t._v("Recently, I installed Jenkins on my ubuntu server, I read the documentation "),e("a",{attrs:{href:"https://www.jenkins.io/doc/book/installing/docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" and here are the steps I followed:")]),t._v(" "),e("ul",[e("li",[t._v("Installed Docker")]),t._v(" "),e("li",[t._v("Create a Docker Network")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker network create jenkins\n")])])]),e("ul",[e("li",[t._v("To confirm that a network has been created, run:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker network list\n")])])]),e("ul",[e("li",[t._v("In order to be able to run docker commands inside jenkins nodes, install docker:dind image as follows:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker run --name jenkins-docker --rm --detach "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --privileged --network jenkins --network-alias docker "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_TLS_CERTDIR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --volume jenkins-docker-certs:/certs/client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --volume jenkins-data:/var/jenkins_home "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --publish "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2376")]),t._v(":2376 docker:dind\n")])])]),e("ul",[e("li",[t._v("Customise official Jenkins Docker image, by executing below two steps:\n"),e("ul",[e("li",[t._v("Create a docker file:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("FROM jenkins/jenkins:2.263.3-lts-jdk11\n"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v(" root\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y apt-transport-https "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    ca-certificates "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" gnupg2 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    software-properties-common\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://download.docker.com/linux/debian/gpg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" apt-key "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\nRUN apt-key fingerprint 0EBFCD88\nRUN add-apt-repository "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] https://download.docker.com/linux/debian \\\n    '),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' stable"')]),t._v("\nRUN "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y docker-ce-cli\n"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v(" jenkins\nRUN jenkins-plugin-cli --plugins blueocean:1.24.4\n")])])]),e("ul",[e("li",[t._v("Build the image:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker build -t myjenkins-blueocean:1.1 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("Run your image as container:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker run "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --name jenkins-blueocean "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --rm "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --detach "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --network jenkins "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp://docker:2376 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_CERT_PATH")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/certs/client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOCKER_TLS_VERIFY")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --publish "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --publish "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50000")]),t._v(":50000 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --volume jenkins-data:/var/jenkins_home "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --volume jenkins-docker-certs:/certs/client:ro "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  myjenkins-blueocean:1.1\n")])])]),e("ul",[e("li",[t._v("Once you have run the container, please note that you have your jenkins files available in a docker volume. So, run the following commands to realize the same:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker volume list\n")])])]),e("ul",[e("li",[t._v("Now that you have the container active, run:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -a\n")])])]),e("ul",[e("li",[t._v("Get the initial password:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("docker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("container_name_or_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/jenkins_home/secrets/initialAdminPassword\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("To run bash commands inside your container")]),t._v(" "),e("p",[t._v("docker exec -it <container_name_or_id> bash")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Simply removing the container and images does not remove the volume")])])])}),[],!1,null,null,null);s.default=n.exports}}]);